<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on shibadog site</title>
		<link>https://shibadog.github.io/posts/</link>
		<description>Recent content in Posts on shibadog site</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>ja-jp</language>
		<lastBuildDate>Sun, 20 Oct 2019 21:10:22 +0900</lastBuildDate>
		<atom:link href="https://shibadog.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Hystrixを説明してみた</title>
			<link>https://shibadog.github.io/posts/001_hystrix_01/</link>
			<pubDate>Sun, 20 Oct 2019 21:10:22 +0900</pubDate>
			
			<guid>https://shibadog.github.io/posts/001_hystrix_01/</guid>
			<description>Hystrixとは Netflixが開発したOSSで、Circuit Breakerの実装。
Circuit Breakerとは、マイクロサービスで開発されたアプリケーション同士が、一つのアプリの障害で連鎖的に障害を発生させる状態を防止するための、ブレーカー的役割をする機能のこと。
後続のアプリケーションが障害を起こした場合、当該アプリで即エラーを返すことでリクエストの流入を抑える。
例えば、一番後続のアプリが障害を起こして、応答がなくなる。
リクエストが流れ続けるため、障害を起こしたアプリを呼び出す全断のアプリが引きずられ、スレッド枯渇やGC頻発による応答不能が発生する（ことがある）。
さらに、これを呼び出すアプリが同様に障害を起こすことで、正常なアプリへの呼び出しも行われなくなり、全体が障害となってしまう。
もし、Hystrixがアプリに組み込まれていた場合。
やはり、最下層のアプリに障害が発生し。。。
しかし、前段のアプリで、障害を検知して後続が障害の場合のロジックを通って
これによって、後続が障害により連続でエラーを返す状態になった場合にも、後続へのリクエストを中止し、負荷をかけないようにしたうえで、異常状態の対処を行う。
これが相当に便利であり、しかも後続への無駄な負荷をかけずにすむという代物でした。
今回はここまで。</description>
			<content type="html"><![CDATA[

<h2 id="hystrixとは">Hystrixとは</h2>

<p>Netflixが開発したOSSで、Circuit Breakerの実装。<br />
Circuit Breakerとは、マイクロサービスで開発されたアプリケーション同士が、一つのアプリの障害で連鎖的に障害を発生させる状態を防止するための、ブレーカー的役割をする機能のこと。</p>

<p>後続のアプリケーションが障害を起こした場合、当該アプリで即エラーを返すことでリクエストの流入を抑える。</p>

<p><img src="./CircuitBreaker_01.svg" alt="" /></p>

<p>例えば、一番後続のアプリが障害を起こして、応答がなくなる。</p>

<p><img src="./CircuitBreaker_02.svg" alt="" /></p>

<p>リクエストが流れ続けるため、障害を起こしたアプリを呼び出す全断のアプリが引きずられ、スレッド枯渇やGC頻発による応答不能が発生する（ことがある）。</p>

<p><img src="./CircuitBreaker_03.svg" alt="" /></p>

<p>さらに、これを呼び出すアプリが同様に障害を起こすことで、正常なアプリへの呼び出しも行われなくなり、全体が障害となってしまう。</p>

<p><img src="./CircuitBreaker_04.svg" alt="" /></p>

<p>もし、Hystrixがアプリに組み込まれていた場合。</p>

<p><img src="./CircuitBreaker_05.svg" alt="" /></p>

<p>やはり、最下層のアプリに障害が発生し。。。</p>

<p><img src="./CircuitBreaker_06.svg" alt="" /></p>

<p>しかし、前段のアプリで、障害を検知して後続が障害の場合のロジックを通って</p>

<p><img src="./CircuitBreaker_07.svg" alt="" /></p>

<p>これによって、後続が障害により連続でエラーを返す状態になった場合にも、後続へのリクエストを中止し、負荷をかけないようにしたうえで、異常状態の対処を行う。</p>

<p>これが相当に便利であり、しかも後続への無駄な負荷をかけずにすむという代物でした。</p>

<p>今回はここまで。</p>
]]></content>
		</item>
		
		<item>
			<title>hugoにgoogleアナリティクスを導入</title>
			<link>https://shibadog.github.io/posts/hugo_analytics/</link>
			<pubDate>Thu, 17 Oct 2019 09:55:20 +0900</pubDate>
			
			<guid>https://shibadog.github.io/posts/hugo_analytics/</guid>
			<description> とりあえずgoogle analyticsが標準対応との記述を公式ドキュメントで見つけたのでやっておく。
1. google analyticsにログイン 2. 新規プロパティを作成 ハマったこと ウェブを選択。
アプリとウェブだとうまくできなかった（よくよめよ）
3. トラッキングIDをコピー プロパティのメニューから選ぶ
4. config.toml に追加 baseURL = &amp;quot;https://shibadog.github.io/&amp;quot; languageCode = &amp;quot;ja-jp&amp;quot; title = &amp;quot;shibadog site&amp;quot; theme = &amp;quot;hermit&amp;quot; googleAnalytics = &amp;quot;UA-999999999-9&amp;quot; [author] name = &amp;quot;shibadog&amp;quot; : :  参考  AGO&amp;rsquo;s page - hugoにgoogle アナリティクスを導入した話 なかけんのHugoノート - 画像を追加しよう  </description>
			<content type="html"><![CDATA[

<p>とりあえずgoogle analyticsが標準対応との記述を<a href="https://gohugo.io/templates/internal/#google-analytics">公式ドキュメント</a>で見つけたのでやっておく。</p>

<h2 id="1-google-analyticsにログイン">1. google analyticsにログイン</h2>

<h2 id="2-新規プロパティを作成">2. 新規プロパティを作成</h2>

<p><img src="./image1.png" alt="プロパティの種類" /></p>

<h3 id="ハマったこと">ハマったこと</h3>

<p>ウェブを選択。<br />
アプリとウェブだとうまくできなかった（よくよめよ）</p>

<h2 id="3-トラッキングidをコピー">3. トラッキングIDをコピー</h2>

<p>プロパティのメニューから選ぶ</p>

<p><img src="./image2.png" alt="トラッキングIDの場所" /></p>

<h2 id="4-config-toml-に追加">4. <code>config.toml</code> に追加</h2>

<pre><code class="language-config.toml">baseURL = &quot;https://shibadog.github.io/&quot;
languageCode = &quot;ja-jp&quot;
title = &quot;shibadog site&quot;
theme = &quot;hermit&quot;

googleAnalytics = &quot;UA-999999999-9&quot;

[author]
  name = &quot;shibadog&quot;
:
:
</code></pre>

<h2 id="参考">参考</h2>

<ul>
<li><a href="https://agodoriru.github.io/post/20171218/">AGO&rsquo;s page - hugoにgoogle アナリティクスを導入した話</a></li>
<li><a href="https://hugo.nakaken88.com/use/image/">なかけんのHugoノート - 画像を追加しよう</a></li>
</ul>
]]></content>
		</item>
		
		<item>
			<title>ブログのネタブログ</title>
			<link>https://shibadog.github.io/posts/blog_neta/</link>
			<pubDate>Wed, 16 Oct 2019 22:12:21 +0900</pubDate>
			
			<guid>https://shibadog.github.io/posts/blog_neta/</guid>
			<description>ブログを書きたい気持ちはある。（ともにネタもいくつか考えられはする）
がしかし、どこから攻めるか、はたまた思いつくままに初めて尻すぼみで終わるのではないかという不安がある。
これの対策として、ブログにしたい（つまり勉強したい）ネタを並べて置くことにする。
（つまり、「今興味があること」になるわけだ）
 Java系  Hystrix（というはサーキットブレーカー）についての動き説明 Resilience4jの動きの調査 Spring Boot サーキットブレーカーの調査 WebClient系の動き調査 リトライ系の動きの調査 Spring以外のフレームワーク（Javaに限る）の調査  インフラ寄り  くーばねーちすの調査 DockerとDocker Compose周り。あと運用。 TCP/IPやHTTPとかSSLとか  他ジャンル  らずぱい hugoのカスタマイズ・使いこなし系の話  アルゴリズム  暗号化まわり 圧縮回り GCアルゴリズム   次に、書こうと思っていつも断念する原因の調査（これをしないと進めない気がするから）
なぜ、ブログを書こうとして不安に陥るのか？
 調べると世の中大体、誰かが同じようなことをしている  でも、複数の情報を合わせないと目的のものにならない 結局自分の言葉にしないと理解が進まない よし、OK  自分が書くより他人が書いたもののほうがわかりやすいし正確  結局自分の言葉にしないと理解が進まない 間違っていることに気づいたら直せばよい。 よし、OK  ディテールにこだわってなかなか完成しない  調査内容にコンセプトを作り、小さく初めて積み上げる！ 途中まで進めてもいいんだよ、間違っていると感じたらやり直せばよいじゃないか。 よし、OK  誰の役にも立たないでしょう？すでにあるわけだし正確でもなく不十分だったりするわけだから  やらないよりはやったほうが良い。 少なくとも自分のためにはなるはず よし、OK   不安になったら見直そう。
あと、大得意の3日坊主にならないために、一週間に一回は何かしらを進めるようにしよう。 そして途中でもここに書き留めていこうと心に決める（ほんとかよ）</description>
			<content type="html"><![CDATA[<p>ブログを書きたい気持ちはある。（ともにネタもいくつか考えられはする）<br />
がしかし、どこから攻めるか、はたまた思いつくままに初めて尻すぼみで終わるのではないかという不安がある。</p>

<p>これの対策として、ブログにしたい（つまり勉強したい）ネタを並べて置くことにする。<br />
（つまり、「今興味があること」になるわけだ）</p>

<ul>
<li>Java系

<ul>
<li>Hystrix（というはサーキットブレーカー）についての動き説明</li>
<li>Resilience4jの動きの調査</li>
<li>Spring Boot サーキットブレーカーの調査</li>
<li>WebClient系の動き調査</li>
<li>リトライ系の動きの調査</li>
<li>Spring以外のフレームワーク（Javaに限る）の調査</li>
</ul></li>
<li>インフラ寄り

<ul>
<li>くーばねーちすの調査</li>
<li>DockerとDocker Compose周り。あと運用。</li>
<li>TCP/IPやHTTPとかSSLとか</li>
</ul></li>
<li>他ジャンル

<ul>
<li>らずぱい</li>
<li>hugoのカスタマイズ・使いこなし系の話</li>
</ul></li>
<li>アルゴリズム

<ul>
<li>暗号化まわり</li>
<li>圧縮回り</li>
<li>GCアルゴリズム</li>
</ul></li>
</ul>

<p>次に、書こうと思っていつも断念する原因の調査（これをしないと進めない気がするから）<br />
なぜ、ブログを書こうとして不安に陥るのか？</p>

<ul>
<li>調べると世の中大体、誰かが同じようなことをしている

<ul>
<li>でも、複数の情報を合わせないと目的のものにならない</li>
<li>結局自分の言葉にしないと理解が進まない</li>
<li>よし、OK</li>
</ul></li>
<li>自分が書くより他人が書いたもののほうがわかりやすいし正確

<ul>
<li>結局自分の言葉にしないと理解が進まない</li>
<li>間違っていることに気づいたら直せばよい。</li>
<li>よし、OK</li>
</ul></li>
<li>ディテールにこだわってなかなか完成しない

<ul>
<li>調査内容にコンセプトを作り、小さく初めて積み上げる！</li>
<li>途中まで進めてもいいんだよ、間違っていると感じたらやり直せばよいじゃないか。</li>
<li>よし、OK</li>
</ul></li>
<li>誰の役にも立たないでしょう？すでにあるわけだし正確でもなく不十分だったりするわけだから

<ul>
<li>やらないよりはやったほうが良い。</li>
<li>少なくとも自分のためにはなるはず</li>
<li>よし、OK</li>
</ul></li>
</ul>

<p>不安になったら見直そう。</p>

<p>あと、大得意の3日坊主にならないために、一週間に一回は何かしらを進めるようにしよう。
そして途中でもここに書き留めていこうと心に決める（ほんとかよ）</p>
]]></content>
		</item>
		
		<item>
			<title>My First Post</title>
			<link>https://shibadog.github.io/posts/my-first-post/</link>
			<pubDate>Tue, 15 Oct 2019 23:52:59 +0900</pubDate>
			
			<guid>https://shibadog.github.io/posts/my-first-post/</guid>
			<description>ブログをまたやりたいと思い、 Hugo という静的サイトジェネレータと GitHub Pages を使って作ってみた。
3日坊主にならないことを祈る。
しかし、このHugoというやつ結構楽しい。 まずはこれを使いこなせるようになりたい。。。</description>
			<content type="html"><![CDATA[<p>ブログをまたやりたいと思い、 <code>Hugo</code> という静的サイトジェネレータと <code>GitHub Pages</code> を使って作ってみた。</p>

<p>3日坊主にならないことを祈る。</p>

<p>しかし、このHugoというやつ結構楽しい。
まずはこれを使いこなせるようになりたい。。。</p>
]]></content>
		</item>
		
	</channel>
</rss>
